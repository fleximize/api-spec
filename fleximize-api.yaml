openapi: 3.0.0
info:
  title: Fleximize Applications API
  description: "Welcome to the Fleximize API!  \n\nIf you encouter any problems or\
    \ have any questions and inquiries, please contact the development team. Thank\
    \ you.\n"
  contact:
    email: development@fleximize.com
  version: 2.0.0
servers:
- url: https://api.fleximize.com/api/v2
  description: Fleximize Production
security:
- bearerAuth: []
paths:
  /get_token:
    post:
      tags:
      - authorisation
      summary: Gets authentication token
      description: |
        Gets authentication token using credentials.

          Token is valid for **7 days**. After that new token should be optained using the same endpoint
      operationId: getToken
      requestBody:
        description: "Fleximize uses API token to allow access to the API called JWT.\
          \ You can get your own token or ask fleximize admin to generate it for you.\n\
          \nAll Fleximize endpoints require authorization using the API token, which\
          \ is expected to be included in all API requests to the server in a header\
          \ that looks like the following: \n\n**Authorization: Bearer {yourtokenhere}**\n"
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/loginCredentials'
          application/json:
            schema:
              $ref: '#/components/schemas/loginCredentials'
        required: true
      responses:
        "200":
          description: Returned authorisation token to use for all requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security: []
  /application:
    post:
      tags:
      - application
      summary: Submits loan application
      description: Submits loan application
      operationId: postApplication
      requestBody:
        description: |
          New loan application can be submitted through this endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
            encoding:
              company:
                contentType: application/json
                style: form
        required: true
      responses:
        "200":
          description: Returns application ID and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          links:
            application_id:
              $ref: '#/components/links/applicationId'
            path.application_id:
              operationId: getApplicationStatus
              parameters:
                application_id: $response.body#/application_id
              description: |
                The `application_id` value returned in the response can be used as the `application_id` parameter in various application related requests.
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "400":
          description: Error response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /application/{application_id}:
    get:
      tags:
      - application
      summary: Get current application status by `application_id`
      description: Get current application status by `application_id`
      operationId: getApplicationStatus
      parameters:
      - name: application_id
        in: path
        description: application_id value returned in in the `/application` response
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: flex1abcd2efg34hij
      responses:
        "200":
          description: Successful response from the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
  /application/document-types:
    get:
      tags:
      - application
      - documents
      summary: Gets list of allowed document types to upload
      description: |
        Gets list of allowed document types to upload. Each of ID returned is used as "document_type" paremeter in "upload" endpoint
      operationId: getAllowedDocTypes
      responses:
        "200":
          description: Response with list of all alowed document types ID and description
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_3'
          links:
            document_type:
              operationId: postApplicationDocuments
              parameters:
                document_type: $response.body#/0/id
              requestBody: $response.body#/0/id
              description: |
                The `id` value returned in the response can be used as the `document_type` parameter in `POST /application/{application_id}/upload`.
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "400":
          description: Error response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /application/{application_id}/upload:
    post:
      tags:
      - application
      - documents
      summary: Post application related document
      description: Post document related to application
      operationId: postApplicationDocuments
      parameters:
      - name: application_id
        in: path
        description: application_id value returned in in the `/application` response
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: flex1abcd2efg34hij
      requestBody:
        description: |
          New loan application documents can be uploaded through this endpoint
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          description: OK response from server
          content:
            text/plain:
              schema:
                type: string
                example: File uploaded
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "400":
          description: Error response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
components:
  schemas:
    loginCredentials:
      title: Get token by credentials
      required:
      - password
      - user_name
      type: object
      properties:
        user_name:
          maxLength: 255
          type: string
          description: Account username. Usually email address
          format: email
          example: example@example.com
        password:
          type: string
          description: Account password
          format: password
          example: somepassword
      description: Login credentials object
    app_status:
      type: string
      enum:
      - Approved
      - Approved (Offer Expired)
      - Cancelled
      - Deposited
      - Failed
      - Under Review
      - Test
    application:
      title: Application object
      required:
      - business_type_id
      - company
      - company_name
      - cra_checks_consent
      - email
      - first_name
      - funding_urgency
      - last_name
      - loan_amount
      - loan_purpose_id
      - other_purpose
      - phone
      - privacy_policy_consent
      - refer_consent
      - term
      - title_id
      type: object
      properties:
        business_type_id:
          type: integer
          description: "Business Type:\n  * `1` - Sole Trader\n  * `2` - Non-Limited\
            \ Partnership\n  * `3` - Limited Company\n  * `4` - Limited Partnership\
            \ (LLP)\n    \n"
          enum:
          - 1
          - 2
          - 3
          - 4
        company_name:
          maxLength: 75
          type: string
          description: Company Name
          example: Example Company Name
        registration_number:
          maxLength: 8
          type: string
          description: Company Registration Number
          nullable: true
          example: "12345678"
        title_id:
          $ref: '#/components/schemas/title_id'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        phone:
          maxLength: 80
          minLength: 8
          pattern: ^(0|\+)\d+$
          type: string
          description: Applicant phone number
          example: "0123456789"
        email:
          maxLength: 255
          pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
          type: string
          description: Applicant email address
          format: email
          example: example@example.com
        loan_amount:
          maximum: 500000
          minimum: 5000
          type: number
          description: Loan amount
          format: double
          example: 30000
        term:
          maximum: 48
          minimum: 3
          type: integer
          description: Loan term
          example: 24
        funding_urgency:
          type: integer
          description: "How quick funds are required:\n  * `1` - As soon as possible\n\
            \  * `2` - Within a few weeks\n  * `3` - I just want to see what's available\n\
            \    \n"
          enum:
          - 1
          - 2
          - 3
        loan_purpose_id:
          type: integer
          description: |
            Loan purpose:
              * `1` - Hire staff
              * `2` - Management buyout
              * `3` - Marketing
              * `4` - Moving premises
              * `5` - Fulfil an order or contract
              * `6` - Pay a due bill
              * `7` - Pay HMRC
              * `8` - Pay staff
              * `9` - Purchase stock
              * `10` - Purchase equipment
              * `11` - Refinance debt
              * `12` - Refurbish premises
              * `13` - Upgrade website
              * `14` - Business expansion
              * `15` - Working capital / cash flow
              * `16` - Other (please specify)
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
        other_purpose:
          maxLength: 1000
          minLength: 3
          type: string
          description: Loan purpose needed when loan purpose id is 15, 16
        internal_id:
          maxLength: 255
          type: string
          description: Your internal ID
          example: AB123456
        notes:
          maxLength: 255
          type: string
          description: Notes
        is_test:
          type: boolean
          description: When set to true, the application will not be reviewed
        privacy_policy_consent:
          type: boolean
          description: |-
            When set to true, you are confirming that your client has consented to Fleximize and its group of companies using their personal information in the ways described in the [Privacy Policy](https://fleximize.com/terms-of-use/privacy-policy) and [Terms of Website Use](https://fleximize.com/terms-of-use/privacy-policy).

            **Fleximize won't be able to process an application without _privacy_policy_consent_ set to true**
        cra_checks_consent:
          type: boolean
          description: |-
            When set to true you are confirming that your client authorises Fleximize to perform credit reference agency (CRA) searches on the business, directors, any individuals supplied as part of the application, and their financial associates. A record of this search will be recorded against all applicants and may be seen by other companies if they carry out a credit enquiry. Before submitting this application, please confirm that you have obtained the consent of all individuals concerned and provided them a copy of our [Privacy Policy](https://fleximize.com/terms-of-use/privacy-policy). For more information on how we and the CRAs use your information, please refer to our [Privacy Policy](https://fleximize.com/terms-of-use/privacy-policy).

            **Fleximize won't be able to process an application without _cra_checks_consent_ set to true**
        refer_consent:
          type: boolean
          description: If Fleximize are unable to provide the finance requested, this
            consent allows us to refer the credit application and personal details
            to our carefully selected panel of brokers and lenders to assist in obtaining
            credit.
        company:
          $ref: '#/components/schemas/company'
      description: Application object
    company:
      required:
      - directors
      - monthly_sales
      - registered_address
      - same_address
      - trading_date
      type: object
      properties:
        vat_no:
          maxLength: 15
          type: string
          description: Company Vat Number
          example: GB999999973
        monthly_sales:
          type: number
          description: Company monthly sales value
          format: double
          example: 50000
        date_of_creation:
          type: string
          description: 'Company incorporation date. Format: YYYY-MM-DD'
          format: date
          example: 2012-12-12
        trading_date:
          type: string
          description: When company have started to trade
          format: date
          example: 2012-12-12
        same_address:
          type: boolean
          description: If is set to true, trading address is not required
        registered_address:
          $ref: '#/components/schemas/address'
        trading_address:
          $ref: '#/components/schemas/address'
        directors:
          type: array
          items:
            $ref: '#/components/schemas/person'
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/person'
      description: Object holding company data
    address:
      required:
      - abode_name_no
      - postcode
      - street
      - town
      type: object
      properties:
        abode_name_no:
          maxLength: 250
          type: string
          description: "Building Name or Number   \n**Required for first director*\n"
          example: "51"
        street:
          maxLength: 250
          type: string
          description: "Street name   \n**Required for first director*\n"
          example: John Street
        street2:
          maxLength: 250
          type: string
          description: "Address second line   \n**Required for first director*\n"
          example: John Street
        town:
          maxLength: 50
          type: string
          description: "Town name   \n**Required for first director*\n"
          example: Ipswich
        county:
          maxLength: 50
          type: string
          description: "County name   \n**Required for first director*\n"
          example: Suffolk
        postcode:
          maxLength: 20
          type: string
          description: "Postocode   \n**Required for first director*\n"
          example: IP3 0AH
    person:
      allOf:
      - required:
        - date_of_birth
        - first_name
        - last_name
        - residential_type_id
        type: object
        properties:
          title_id:
            $ref: '#/components/schemas/title_id'
          first_name:
            $ref: '#/components/schemas/first_name'
          last_name:
            $ref: '#/components/schemas/last_name'
          date_of_birth:
            type: string
            description: 'Person date of birth. Format: YYYY-MM-DD'
            format: date
            example: 1980-12-12
          major_shareholder:
            type: boolean
            description: Set to true if person holds 25% or more shares
            default: false
          residential_type_id:
            type: integer
            description: |
              Person Title:
                * `1` - Homeowner
                * `2` - Living with Partner
                * `3` - Tenant
                * `4` - Other
            enum:
            - 1
            - 2
            - 3
            - 4
        description: Person object
      - $ref: '#/components/schemas/address'
      - required:
        - move_in_date
        type: object
        properties:
          move_in_date:
            $ref: '#/components/schemas/move_in_date'
          previous_addresses:
            type: array
            items:
              allOf:
              - type: object
                description: |-
                  Person previous addresses.

                  *Required if move_in_date is not over 3 years ago*
              - $ref: '#/components/schemas/address'
              - required:
                - move_in_date
                type: object
                properties:
                  move_in_date:
                    $ref: '#/components/schemas/move_in_date'
    title_id:
      type: integer
      description: "Person Title:\n  * `1` - Mr\n  * `2` - Mrs\n  * `3` - Miss\n \
        \ * `4` - Ms\n  * `5` - Dr\n  \n"
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
    first_name:
      maxLength: 80
      type: string
      description: Person first name
      example: John
    last_name:
      maxLength: 80
      type: string
      description: Person last name
      example: Doe
    move_in_date:
      type: string
      description: "Approximate move-in date. Format: YYYY-MM-DD\n      \n**Required\
        \ for first director*\n"
      format: date
      example: 1980-12-12
    inline_response_200:
      type: object
      properties:
        token:
          type: string
          description: Bearer token
          example: d290f1ee6c544b0190e6d701748f0851
    inline_response_401:
      type: object
      properties:
        error:
          type: string
          example: Invalid credentials
    inline_response_200_1:
      type: object
      properties:
        application_id:
          type: string
          description: Unique application ID
          example: d290f1ee6c544b0190e6d701748f0851
        internal_score_status:
          type: string
          description: Internal checks status
          example: PASSED
    inline_response_400:
      type: object
      properties:
        error:
          type: string
    inline_response_200_2:
      type: object
      properties:
        application_status:
          allOf:
          - $ref: '#/components/schemas/app_status'
          - type: string
          - description: Current application status
          - example: Approved
        internal_score_status:
          type: string
          description: String describing if application passed, failed or have been
            referred for manual review
          example: PASSED
        internal_id:
          type: string
          description: Client internall ID
    inline_response_200_3:
      type: object
      properties:
        id:
          type: string
          description: Document ID
          example: "1"
        type:
          type: string
          description: Document type description
          example: Bank Statement
    body:
      required:
      - document_type
      - file
      type: object
      properties:
        document_type:
          type: integer
          description: One of `id` values returned by `/application/document-types`
            response
          format: int32
          example: 1
        file:
          type: string
          description: Document file being uploaded
          format: binary
  responses:
    Unauthorized:
      description: Access token is missing or invalid
    Unautheticated:
      description: Invalid credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_401'
    authToken:
      description: Returned authorisation token to use for all requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    appSubmitted:
      description: Returns application ID and status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_1'
      links:
        application_id:
          $ref: '#/components/links/applicationId'
        path.application_id:
          operationId: getApplicationStatus
          parameters:
            application_id: $response.body#/application_id
          description: |
            The `application_id` value returned in the response can be used as the `application_id` parameter in various application related requests.
    error:
      description: Error response from server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
    ok:
      description: OK response from server
      content:
        text/plain:
          schema:
            type: string
            example: File uploaded
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  links:
    applicationId:
      operationId: postApplicationDocuments
      parameters:
        application_id: $response.body#/application_id
      description: |
        The `application_id` value returned in the response can be used as the `application_id` parameter in various application related requests.
